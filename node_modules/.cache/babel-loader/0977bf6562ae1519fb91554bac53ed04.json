{"ast":null,"code":"import _slicedToArray from\"/home/kali/Desktop/Secure_Cloud_Computing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/home/kali/Desktop/Secure_Cloud_Computing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{useReducer,useEffect}from'react';import{useAuth}from'../contexts/AuthContext';import{database}from'../firebase';var ACTIONS={SELECT_FOLDER:\"select-folder\",UPDATE_FOLDER:\"update-folder\",SET_CHILD_FOLDERS:\"set-child-folders\",SET_CHILD_FILES:\"set-child-files\"};export var SHARE_FOLDER={name:\"Shared Drive\",id:null,path:[]};function reducer(state,_ref){var type=_ref.type,payload=_ref.payload;switch(type){case ACTIONS.SELECT_FOLDER:return{folderId:payload.folderId,folder:payload.folder,childFiles:[],childFolders:[]};case ACTIONS.UPDATE_FOLDER:return _objectSpread(_objectSpread({},state),{},{folder:payload.folder});case ACTIONS.SET_CHILD_FOLDERS:return _objectSpread(_objectSpread({},state),{},{childFolders:payload.childFolders});case ACTIONS.SET_CHILD_FILES:return _objectSpread(_objectSpread({},state),{},{childFiles:payload.childFiles});default:return state;}}export function useShareFolder(){var folderId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var folder=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var _useReducer=useReducer(reducer,{folderId:folderId,folder:folder,childFolders:[],childFiles:[]}),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];var _useAuth=useAuth(),currentUser=_useAuth.currentUser;useEffect(function(){dispatch({type:ACTIONS.SELECT_FOLDER,payload:{folderId:folderId,folder:folder}});},[folderId,folder]);useEffect(function(){if(folderId===null){return dispatch({type:ACTIONS.UPDATE_FOLDER,payload:{folder:SHARE_FOLDER}});}database.folders.doc(folderId).get().then(function(doc){dispatch({type:ACTIONS.UPDATE_FOLDER,payload:{folder:database.formatDoc(doc)}});}).catch(function(){dispatch({type:ACTIONS.UPDATE_FOLDER,payload:{folder:SHARE_FOLDER}});});},[folderId]);useEffect(function(){console.log(\"retriving database child folders and folderId is\",folderId);console.log(\"current user id is \",currentUser.uid);return database.folders.where(\"shared\",\"==\",\"yes\").where(\"ownerId\",\"==\",currentUser.uid).orderBy(\"createdAt\").onSnapshot(function(snapshot){dispatch({type:ACTIONS.SET_CHILD_FOLDERS,payload:{childFolders:snapshot.docs.map(database.formatDoc)}});});},[folderId,currentUser]);useEffect(function(){console.log(\"retriving database child files\");return database.files.where(\"shared\",\"==\",\"yes\").where(\"ownerId\",\"==\",currentUser.uid).orderBy(\"createdAt\").onSnapshot(function(snapshot){dispatch({type:ACTIONS.SET_CHILD_FILES,payload:{childFiles:snapshot.docs.map(database.formatDoc)}});});},[folderId,currentUser]);return state;}","map":{"version":3,"sources":["/home/kali/Desktop/Secure_Cloud_Computing/src/hooks/useShareFolder.js"],"names":["useReducer","useEffect","useAuth","database","ACTIONS","SELECT_FOLDER","UPDATE_FOLDER","SET_CHILD_FOLDERS","SET_CHILD_FILES","SHARE_FOLDER","name","id","path","reducer","state","type","payload","folderId","folder","childFiles","childFolders","useShareFolder","dispatch","currentUser","folders","doc","get","then","formatDoc","catch","console","log","uid","where","orderBy","onSnapshot","snapshot","docs","map","files"],"mappings":"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","sourcesContent":["import { useReducer, useEffect } from 'react'\nimport { useAuth } from '../contexts/AuthContext'\nimport { database } from '../firebase'\n\nconst ACTIONS = {\n    SELECT_FOLDER: \"select-folder\",\n    UPDATE_FOLDER: \"update-folder\",\n    SET_CHILD_FOLDERS: \"set-child-folders\",\n    SET_CHILD_FILES: \"set-child-files\",\n}\n\nexport const SHARE_FOLDER = { name: \"Shared Drive\", id: null, path:[] }\n\nfunction reducer(state, { type, payload }) {\n    switch (type) {\n        case ACTIONS.SELECT_FOLDER:\n            return {\n                folderId: payload.folderId,\n                folder: payload.folder,\n                childFiles: [],\n                childFolders: [],\n            }\n        case ACTIONS.UPDATE_FOLDER:\n            return {\n                ...state,\n                folder: payload.folder,\n            }\n        case ACTIONS.SET_CHILD_FOLDERS:\n            return {\n                ...state,\n                childFolders: payload.childFolders,\n            }\n       case ACTIONS.SET_CHILD_FILES:\n            return {\n                ...state,\n                childFiles: payload.childFiles,\n            }\n        default:\n            return state\n    }\n}\n\nexport function useShareFolder(folderId = null, folder = null) {\n    const [state, dispatch] = useReducer(reducer, {\n        folderId,\n        folder,\n        childFolders: [],\n        childFiles: [],\n    })\n    const { currentUser } = useAuth()\n\n    useEffect(() => {\n        dispatch({ type: ACTIONS.SELECT_FOLDER, payload: { folderId, folder } })\n      }, [folderId, folder])\n    \n      useEffect(() => {\n        if (folderId === null) {\n          return dispatch({\n            type: ACTIONS.UPDATE_FOLDER,\n            payload: { folder: SHARE_FOLDER },\n          })\n        }\n    \n        database.folders\n          .doc(folderId)\n          .get()\n          .then(doc => {\n            dispatch({\n              type: ACTIONS.UPDATE_FOLDER,\n              payload: { folder: database.formatDoc(doc) },\n            })\n          })\n          .catch(() => {\n            dispatch({\n              type: ACTIONS.UPDATE_FOLDER,\n              payload: { folder: SHARE_FOLDER },\n            })\n          })\n      }, [folderId])\n    \n      useEffect(() => {\n        console.log(\"retriving database child folders and folderId is\",folderId)\n        console.log(\"current user id is \", currentUser.uid)\n        return database.folders\n          .where(\"shared\", \"==\", \"yes\")\n          .where(\"ownerId\", \"==\", currentUser.uid)\n          .orderBy(\"createdAt\")\n          .onSnapshot(snapshot => {\n            dispatch({\n              type: ACTIONS.SET_CHILD_FOLDERS,\n              payload: { childFolders: snapshot.docs.map(database.formatDoc) },\n            })\n          })\n      }, [folderId, currentUser])\n    \n      useEffect(() => {\n        console.log(\"retriving database child files\")\n        return (\n          database.files\n            .where(\"shared\", \"==\", \"yes\")\n            .where(\"ownerId\", \"==\", currentUser.uid)\n            .orderBy(\"createdAt\")\n            .onSnapshot(snapshot => {\n              dispatch({\n                type: ACTIONS.SET_CHILD_FILES,\n                payload: { childFiles: snapshot.docs.map(database.formatDoc) },\n              })\n            })\n        )\n      }, [folderId, currentUser])\n    \n    return state\n}\n"]},"metadata":{},"sourceType":"module"}